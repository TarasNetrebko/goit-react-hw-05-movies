{"version":3,"file":"static/js/898.dcf85ef8.chunk.js","mappings":"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","sources":["components/Home/Home.styled.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Movies/Movies.jsx","components/Movies/Movies.styled.jsx","helpers/fetchHandler.js"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const List = styled.ul`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-wrap: wrap;\n    list-style: none;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n`\n\nexport const ListItem = styled.li`\n    margin-right: 10px;\n    margin-bottom: 20px;\n    width: 300px;\n    height: 500px;\n    &:hover {\n        transform: scale(1.05);\n        transition-duration: 500ms;\n    }\n`\nexport const Title = styled.h1`\n    text-align: center;\n    margin-top: 50px;\n    margin-bottom: 50px;\n`","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { searchMoviesByWord } from 'helpers/fetchHandler';\nimport { useState, useEffect } from 'react';\nimport { List, ListItem } from '../Home/Home.styled';\nimport { Link, useSearchParams, useLocation} from 'react-router-dom';\nimport {\n  StyledButton,\n  StyledForm,\n  StyledInput,\n  Container,\n} from './Movies.styled';\nconst Movies = () => {\n  const [keyword, setKeyword] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n  const location = useLocation();\n  useEffect(() => {\n    if (page > 1) {\n      searchMoviesByWord(query.toLowerCase(), page).then(\n        res => {\n          setMovies([...movies, ...res]);\n        }\n      );\n    }\n    // eslint-disable-next-line\n  }, [page]);\n  useEffect(() => {\n    if (query) {\n      setPage(1);\n      setKeyword(query);\n      searchMoviesByWord(query.toLowerCase(), page).then(res => {\n        setMovies(res);\n      });\n    } else {\n      setMovies([]);\n      setKeyword(\"\");\n    }\n    // eslint-disable-next-line\n  }, [query]);\n  const keywordChanger = e => {\n    setKeyword(e.target.value);\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    if (keyword) {\n      setSearchParams({ query: keyword });\n    }\n  };\n  const pageChanger = () => {\n    setPage(prevPage => {\n      setPage(prevPage + 1);\n    });\n  };\n  return (\n    <>\n      <StyledForm action=\"\" onSubmit={submitHandler}>\n        <StyledInput\n          type=\"text\"\n          onChange={keywordChanger}\n          value={keyword}\n          required\n        />\n        <StyledButton type=\"submit\">Find Movie</StyledButton>\n      </StyledForm>\n      <List>\n        {movies &&\n          movies.map(({ id, poster_path, title }) => (\n            <Link state={{from: location}} to={`/movies/${id}`}>\n              <ListItem key={id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt=\"title\"\n                  width=\"300\"\n                  height=\"450\"\n                />\n                <p>{title}</p>\n              </ListItem>\n            </Link>\n          ))}\n      </List>\n      <Container>\n        {movies.length > 0 && (\n          <StyledButton type=\"button\" onClick={pageChanger}>\n            Load More\n          </StyledButton>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Movies;","import styled from \"styled-components\"\n\nexport const StyledButton = styled.button`\n    background-color: white;\n    color: black;\n    cursor: pointer;\n    &:hover,\n    &:focus {\n        border-color: white;\n        color: white;\n        background-color: #36b5e7;\n    }\n`\nexport const StyledForm = styled.form`\n    width: 100%;\n    padding: 30px 0;\n    display: flex;\n    justify-content: center;\n`\nexport const StyledInput = styled.input`\n    margin-right: 10px;\n    margin-left: 10px;\n`\nexport const Container = styled.div`\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`","import axios from 'axios';\n\nconst API_KEY = 'a63e37a24373c68ca9ae486468591e7b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const result = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  return result.data.results;\n};\n\nexport const searchMoviesByWord = async (word, page) => {\n  const result = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${word}&page=${page}`\n  );\n  return result.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const result = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return result.data;\n};\n\nexport const fetchActorCast = async id => {\n  const result = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return result.data;\n};\n\nexport const fetchReviews = async id => {\n  const result = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return result.data;\n};\n"],"names":["List","styled","ListItem","Title","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","useState","keyword","setKeyword","movies","setMovies","page","setPage","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","searchMoviesByWord","toLowerCase","then","res","action","onSubmit","e","preventDefault","type","onChange","target","value","required","map","id","poster_path","title","state","to","src","alt","width","height","length","onClick","prevPage","StyledButton","StyledForm","StyledInput","Container","API_KEY","axios","getTrending","result","data","results","word","fetchMovieDetails","fetchActorCast","fetchReviews"],"sourceRoot":""}