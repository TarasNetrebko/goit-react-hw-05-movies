{"version":3,"file":"static/js/842.de24f5f0.chunk.js","mappings":"2MAmCA,UA9Ba,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAcC,KAAKH,EACpB,GAAE,KAED,4BACE,SAAC,KAAD,2CACA,SAAC,KAAD,UACGD,GACCA,EAAOK,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC7B,OACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAM,KAAOC,GAAE,kBAAaL,GAA3C,UACE,UAAC,KAAD,YACE,gBACEM,IAAG,0CAAqCL,GACxCM,IAAI,QACJC,MAAM,MACNC,OAAO,SAET,uBAAIP,QAR8CF,EAYzD,QAIV,C,qIC/BYU,EAAOC,EAAAA,GAAAA,GAAH,2MAWJC,EAAWD,EAAAA,GAAAA,GAAH,8MAURE,EAAQF,EAAAA,GAAAA,GAAH,iG,4MCrBZG,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMlB,EAAW,mCAAG,oGACJkB,IAAAA,IAAA,sCAAyCD,IADrC,cACnBE,EADmB,yBAElBA,EAAOC,KAAKC,SAFM,2CAAH,qDAKXC,EAAkB,mCAAG,WAAOC,EAAMC,GAAb,uFACXN,IAAAA,IAAA,+BACKD,EADL,kBACsBM,EADtB,iBACmCC,IAFxB,cAC1BL,EAD0B,yBAIzBA,EAAOC,KAAKC,SAJa,2CAAH,wDAOlBI,EAAiB,mCAAG,WAAMtB,GAAN,uFACVe,IAAAA,IAAA,gBAAmBf,EAAnB,oBAAiCc,IADvB,cACzBE,EADyB,yBAExBA,EAAOC,MAFiB,2CAAH,sDAKjBM,EAAc,mCAAG,WAAMvB,GAAN,uFACPe,IAAAA,IAAA,gBAAmBf,EAAnB,4BAAyCc,IADlC,cACtBE,EADsB,yBAErBA,EAAOC,MAFc,2CAAH,sDAKdO,EAAY,mCAAG,WAAMxB,GAAN,uFACLe,IAAAA,IAAA,gBACVf,EADU,4BACYc,EADZ,YADK,cACpBE,EADoB,yBAInBA,EAAOC,MAJY,2CAAH,qD","sources":["components/Home/Home.jsx","components/Home/Home.styled.jsx","helpers/fetchHandler.js"],"sourcesContent":["import { getTrending } from 'helpers/fetchHandler';\nimport { useState, useEffect } from 'react';\nimport { List, ListItem,Title } from './Home.styled';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getTrending().then(setMovies);\n  }, []);\n  return (\n    <div>\n      <Title>Trending Movies of the week</Title>\n      <List>\n        {movies &&\n          movies.map(({ id, poster_path, title }) => {\n            return (\n              <Link state={{ from: \"/\" }} to={`/movies/${id}`} key={id}>\n                <ListItem>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                    alt=\"title\"\n                    width=\"300\"\n                    height=\"450\"\n                  />\n                  <p>{title}</p>\n                </ListItem>\n              </Link>\n            );\n          })}\n      </List>\n    </div>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\"\n\nexport const List = styled.ul`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-wrap: wrap;\n    list-style: none;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n`\n\nexport const ListItem = styled.li`\n    margin-right: 10px;\n    margin-bottom: 20px;\n    width: 300px;\n    height: 500px;\n    &:hover {\n        transform: scale(1.05);\n        transition-duration: 500ms;\n    }\n`\nexport const Title = styled.h1`\n    text-align: center;\n    margin-top: 50px;\n    margin-bottom: 50px;\n`","import axios from 'axios';\n\nconst API_KEY = 'a63e37a24373c68ca9ae486468591e7b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const result = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  return result.data.results;\n};\n\nexport const searchMoviesByWord = async (word, page) => {\n  const result = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${word}&page=${page}`\n  );\n  return result.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const result = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return result.data;\n};\n\nexport const fetchActorCast = async id => {\n  const result = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return result.data;\n};\n\nexport const fetchReviews = async id => {\n  const result = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return result.data;\n};\n"],"names":["useState","movies","setMovies","useEffect","getTrending","then","map","id","poster_path","title","state","from","to","src","alt","width","height","List","styled","ListItem","Title","API_KEY","axios","result","data","results","searchMoviesByWord","word","page","fetchMovieDetails","fetchActorCast","fetchReviews"],"sourceRoot":""}