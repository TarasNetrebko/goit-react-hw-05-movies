{"version":3,"file":"static/js/736.d72828dd.chunk.js","mappings":"wPAEaA,EAAgBC,EAAAA,GAAAA,IAAH,qEAKbC,EAAWD,EAAAA,GAAAA,GAAH,2MAURE,EAAQF,EAAAA,GAAAA,GAAH,wF,SCSlB,EAtBa,WACT,OAAwBG,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAASC,EAAAA,EAAAA,MAQf,OAPAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeH,EAAOI,SAASC,MAAK,SAAAC,GAChCP,EAAQO,EAAIR,KACf,GAEJ,GAAE,IACHS,QAAQC,IAAIV,IAER,SAACL,EAAD,WACI,SAACE,EAAD,UACKG,GAAQA,EAAKW,KAAI,gBAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,KAAMC,EAAjC,EAAiCA,GAAjC,OAAyC,UAACjB,EAAD,YACvD,gBAAKkB,IAAG,yCAAoCJ,GAAgBK,IAAI,OAAOC,MAAM,MAAMC,OAAO,SAC1F,uBAAIL,KACJ,uCAAeD,OAHoDE,EAArD,OAQjC,C,4MCvBKK,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACJD,IAAAA,IAAA,sCAAyCD,IADrC,cACnBG,EADmB,yBAElBA,EAAOC,KAAKC,SAFM,2CAAH,qDAKXC,EAAkB,mCAAG,WAAOC,EAAMC,GAAb,uFACXP,IAAAA,IAAA,+BACKD,EADL,kBACsBO,EADtB,iBACmCC,IAFxB,cAC1BL,EAD0B,yBAIzBA,EAAOC,KAAKC,SAJa,2CAAH,wDAOlBI,EAAiB,mCAAG,WAAMd,GAAN,uFACVM,IAAAA,IAAA,gBAAmBN,EAAnB,oBAAiCK,IADvB,cACzBG,EADyB,yBAExBA,EAAOC,MAFiB,2CAAH,sDAKjBnB,EAAc,mCAAG,WAAMU,GAAN,uFACPM,IAAAA,IAAA,gBAAmBN,EAAnB,4BAAyCK,IADlC,cACtBG,EADsB,yBAErBA,EAAOC,MAFc,2CAAH,sDAKdM,EAAY,mCAAG,WAAMf,GAAN,uFACLM,IAAAA,IAAA,gBACVN,EADU,4BACYK,EADZ,YADK,cACpBG,EADoB,yBAInBA,EAAOC,MAJY,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","helpers/fetchHandler.js"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const CastContainer = styled.div`\n    padding: 30px;\n    padding-left: 10px;\n`\n\nexport const CastList = styled.ul`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-wrap: wrap;\n    list-style: none;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n`\nexport const Actor = styled.li`\n    margin-right: 10px;\n    width: 200px;\n    height: 300px;\n`","import { fetchActorCast } from \"helpers/fetchHandler\"\nimport { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { CastList, Actor, CastContainer } from \"./Cast.styled\";\nconst Cast = () => {\n    const [cast, setCast] = useState(null);\n    const params = useParams();\n    useEffect(() => {\n        fetchActorCast(params.movieId).then(res => {\n            setCast(res.cast);\n        })\n        // eslint-disable-next-line\n    }, [])\n    console.log(cast)\n    return (\n        <CastContainer>\n            <CastList>\n                {cast && cast.map(({profile_path, character, name, id}) => <Actor key={id}>\n                    <img src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt=\"name\" width=\"105\" height=\"150\"/>\n                    <p>{name}</p>\n                    <p>Character: {character}</p>\n                </Actor> )}\n            </CastList>\n        </CastContainer>\n    )\n}\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = 'a63e37a24373c68ca9ae486468591e7b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const result = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  return result.data.results;\n};\n\nexport const searchMoviesByWord = async (word, page) => {\n  const result = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${word}&page=${page}`\n  );\n  return result.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const result = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return result.data;\n};\n\nexport const fetchActorCast = async id => {\n  const result = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return result.data;\n};\n\nexport const fetchReviews = async id => {\n  const result = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return result.data;\n};\n"],"names":["CastContainer","styled","CastList","Actor","useState","cast","setCast","params","useParams","useEffect","fetchActorCast","movieId","then","res","console","log","map","profile_path","character","name","id","src","alt","width","height","API_KEY","axios","getTrending","result","data","results","searchMoviesByWord","word","page","fetchMovieDetails","fetchReviews"],"sourceRoot":""}